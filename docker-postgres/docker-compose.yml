services:
  db:
    image: vestimentacatan:latest
    container_name: pg17
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '${POSTGRES_EXTERNAL_PORT}:${POSTGRES_PORT}'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    volumes:
      - pg17_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 3s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${POSTGRES_USER}@vestimenta-catan.com
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '8080:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

  backup:
    image: postgres:17-alpine
    container_name: pg_backup
    restart: 'no'
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./backups:/backups
    depends_on:
      - db
    command: >
      sh -c "
      while true; do
        echo 'Creating backup...'
        pg_dump -h db -U ${POSTGRES_USER} -d vestimenta_catan_dev > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql
        echo 'Backup created successfully'
        sleep 86400
      done
      "

volumes:
  pg17_data:
  pgadmin_data:
